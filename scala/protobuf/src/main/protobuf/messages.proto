syntax = "proto3";

// Brought in from scalapb-runtime
import "scalapb/scalapb.proto";
import "google/protobuf/wrappers.proto";


option (scalapb.options) = {
  package_name: "protobuf.messages"

  // All classes that extend a sealed trait need to be in the same Scala
  // file, so we set single_file to true.
  single_file: true
  flat_package: true
};

// Traits

// Represents a Remote ActorRef
message ActorRefProto {
    string path = 1;
}

// Represents an Akka Address
message AddressProto {
    string system = 1;
    string hostname = 2;
    uint32 port = 3;
    string protocol = 4 [(scalapb.field).no_box = false];
}

// Represents an InetSocketAddress
message InetProto {
    string ip = 1;
    int32 port = 2;
}

// StateManager related

//case class StateMasterConn(stateMaster: ActorRef)
message StateMasterConn {
    ActorRefProto ref = 1 [(scalapb.field).no_box = true];
    string kompactProxyAddr = 2;
}


// To be removed


//case class ArcTask(name: String, expr: String, vec: String,
//result: Option[String] = None, id: Option[Int], status: Option[String)
message ArcTask {
    string name = 1;
    int32 cores = 2;
    int32 memory = 3;
    string expr = 4;
    string vec = 5;
    google.protobuf.StringValue result = 6; // To make it an Option
    google.protobuf.Int32Value id = 7; // Added when received
    google.protobuf.StringValue status = 8; // To make it an Option
}

message ArcTaskUpdate {
    ArcTask task = 1 [(scalapb.field).no_box = true];
}

message ResourceProfile {
    int32 cpuCores = 1;
    int64 memoryInMb = 2; // Long
}

message ArcApp {
    string id = 1;
    repeated ArcTask tasks = 2;
    int32 priority = 3;
    bool locality = 4;
    ActorRefProto appMasterRef = 5;
    google.protobuf.StringValue status = 6; // To make it an Option
}
